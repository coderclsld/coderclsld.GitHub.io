import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,o as m}from"./app-C_wt19t6.js";const o={};function n(c,t){return m(),r("div",null,t[0]||(t[0]=[e("h1",{id:"helm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helm"},[e("span",null,"helm")])],-1),e("p",null,"没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。",-1),e("p",null,"helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。",-1),e("p",null,"Helm本质就是让k8s的应用管理（Deployment、Service等）可配置，能动态生成。通过动态生成K8S资源清单文件（deployment.yaml、service.yaml）。然后kubectl自动调用K8S资源部署。",-1)]))}const a=l(o,[["render",n],["__file","helm.html.vue"]]),i=JSON.parse(`{"path":"/k8s/helm.html","title":"helm","lang":"en-US","frontmatter":{"description":"helm 没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。 helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。 Helm本质就是让k8s的应用管理（Depl...","head":[["meta",{"property":"og:url","content":"https://github.com/coderclsld/coderclsld.github.io/k8s/helm.html"}],["meta",{"property":"og:site_name","content":"clsld 's blog"}],["meta",{"property":"og:title","content":"helm"}],["meta",{"property":"og:description","content":"helm 没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。 helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。 Helm本质就是让k8s的应用管理（Depl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-26T13:53:10.000Z"}],["meta",{"property":"article:author","content":"clsld"}],["meta",{"property":"article:modified_time","content":"2024-09-26T13:53:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"helm\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-26T13:53:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"clsld\\",\\"url\\":\\"https://github.com/coderclsld\\"}]}"]]},"headers":[],"git":{"createdTime":1725983611000,"updatedTime":1727358790000,"contributors":[{"name":"clsld","email":"807686672@qq.com","commits":2}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"k8s/helm.md","localizedDate":"September 10, 2024","excerpt":"\\n<p>没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。</p>\\n<p>helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。</p>\\n<p>Helm本质就是让k8s的应用管理（Deployment、Service等）可配置，能动态生成。通过动态生成K8S资源清单文件（deployment.yaml、service.yaml）。然后kubectl自动调用K8S资源部署。</p>\\n","autoDesc":true}`);export{a as comp,i as data};
